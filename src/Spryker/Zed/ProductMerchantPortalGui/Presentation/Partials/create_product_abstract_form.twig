{% form_theme form '@ZedUi/Form/form-webcomponent-layout.twig' %}

{% macro langIcon(localeName) -%}
    {%- if localeName == 'en_US' -%}united-states
    {%- elseif localeName == 'de_DE' -%}germany
    {%- endif -%}
{% endmacro %}

{% macro langFullName(localeName) -%}
    {%- if localeName == 'en_US' -%}English
    {%- elseif localeName == 'de_DE' -%}German
    {%- endif -%}
{% endmacro %}

{% import _self as macros %}

{% set defaultLocaleCode = defaultLocaleCode | default %}

{% block body %}
    {% set mainClass = 'mp-create-abstract-product' %}

    {% block createAbstractProduct %}
        <web-mp-create-abstract-product cloak>
            {{ form_start(form, { attr: { excludeFormTag: true } }) }}
                {% block title %}
                    <span title>{{ 'Create Abstract Product' | trans }}</span>
                {% endblock %}

                {% block action %}
                    <web-spy-button cloak size="lg" type="submit" action>
                        {{ 'Next' | trans }}
                    </web-spy-button>
                {% endblock %}

                {% block sku %}
                    <web-spy-card
                        cloak
                        spy-title="{{ form.sku.vars.label | trans ~ (form.sku.vars.required ? ' *') }}"
                        class="{{ mainClass }}__card {{ mainClass }}__card--half-width">
                        {{ form_row(form.sku, { label: false, row_attr: { 'no-spaces': 'true' } }) }}
                    </web-spy-card>
                {% endblock %}

                {% block name %}
                    <web-spy-card
                        cloak
                        spy-title="{{ form.name.vars.label | trans ~ (form.name.vars.required ? ' *') }}"
                        class="{{ mainClass }}__card">
                        <div class="{{ mainClass }}__card-name-input-header">
                            <web-spy-icon
                                name="{{ macros.langIcon(defaultLocaleCode) }}"
                                class="{{ mainClass }}__card-name-input-header-icon">
                            </web-spy-icon>
                            {{ macros.langFullName(defaultLocaleCode) | trans }}
                            ({{ defaultLocaleCode }})
                        </div>

                        {{ form_row(form.name, { label: false, row_attr: { 'no-spaces': 'true' } }) }}

                        <small class="{{ mainClass }}__card-name-notification-message">
                            {{ 'The rest of the locales will be defined once the product has been created.' | trans }}
                        </small>
                    </web-spy-card>
                {% endblock %}

                {% block concreteProducts %}
                    {% set concreteProductVars = form.isSingleConcrete.vars %}

                    <web-spy-card
                        cloak
                        spy-title="{{ concreteProductVars.label | trans ~ (concreteProductVars.required ? ' *') }}"
                        class="{{ mainClass }}__card {{ mainClass }}__card-radios">
                        {% set concretesListFormChoices = [] %}

                        {% for choice in concreteProductVars.choices %}
                            {% set concretesListFormChoices = concretesListFormChoices | merge([{
                                label: choice.label | trans,
                                value: choice.value,
                                hasNotificationMessage: choice.data,
                                hasError: concreteProductVars.errors | length > 0,
                            }]) %}
                        {% endfor %}

                        {% set concretesListForm = {
                            notificationMessage: 'Once this product is created, you will no longer be able to add additional concrete products.' | trans,
                            errorMessage: concreteProductVars.errors | length ? concreteProductVars.errors[0].message | default | trans,
                            value: concreteProductVars.value,
                            name: concreteProductVars.full_name,
                            choices: concretesListFormChoices,
                        } %}

                        <web-mp-create-abstract-product-concretes-list cloak form="{{ concretesListForm | json_encode }}">
                            {% do form.isSingleConcrete.setRendered %}
                        </web-mp-create-abstract-product-concretes-list>
                    </web-spy-card>
                {% endblock %}
            {{ form_end(form) }}
        </web-mp-create-abstract-product>
    {% endblock %}
{% endblock %}
